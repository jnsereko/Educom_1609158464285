/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN LecturerActionsGenerated.js PLEASE EDIT ../LecturerActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import LecturerApi from "../../../api/LecturerApi";

let actionsFunction = {

  //CRUD METHODS

  // Create lecturer
  createLecturer: function(lecturer) {
    return function(dispatch) {
      return LecturerApi
        .createLecturer(lecturer)
        .then(lecturer => {
          dispatch(actionsFunction.createLecturerSuccess(lecturer));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createLecturerSuccess: function(lecturer) {
    return { type: types.CREATE_LECTURER_SUCCESS, payload: lecturer };
  },


  // Delete lecturer
  deleteLecturer: function(id) {
    return function(dispatch) {
      return LecturerApi
        .deleteLecturer(id)
        .then(lecturer => {
          dispatch(actionsFunction.deleteLecturerSuccess(lecturer));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteLecturerSuccess: function(lecturer) {
    return { type: types.DELETE_LECTURER_SUCCESS, payload: lecturer };
  },


  // Get lecturer
  loadLecturer: function(id) {
    return function(dispatch) {
      return LecturerApi
        .getOneLecturer(id)
        .then(lecturer => {
          dispatch(actionsFunction.loadLecturerSuccess(lecturer));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLecturerSuccess: function(lecturer) {
    return { type: types.GET_LECTURER_SUCCESS, payload: lecturer };
  },

  // Load  list
  loadLecturerList: function() {
    return function(dispatch) {
      return LecturerApi
        .getLecturerList()
        .then(list => {
          dispatch(actionsFunction.loadLecturerListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLecturerListSuccess: function(list) {
    return { type: types.LIST_LECTURER_SUCCESS, payload: list };
  },

	
  // Save lecturer
  saveLecturer: function(lecturer) {
    return function(dispatch) {
      return LecturerApi
        .saveLecturer(lecturer)
        .then(lecturer => {
          dispatch(actionsFunction.saveLecturerSuccess(lecturer));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveLecturerSuccess: function(lecturer) {
    return { type: types.UPDATE_LECTURER_SUCCESS, payload: lecturer };
  },


};

export default actionsFunction;
